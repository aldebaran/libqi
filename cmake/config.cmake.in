@PACKAGE_INIT@

# Find dependencies
include(CMakeFindDependencyMacro)

# - Boost
find_dependency(
  Boost @BOOST_VERSION@ EXACT REQUIRED
  COMPONENTS @BOOST_COMPONENTS@
)

# - OpenSSL
find_dependency(OpenSSL @OPENSSL_VERSION@ EXACT REQUIRED)

# - Threads
if(@UNIX@)
  find_dependency(Threads REQUIRED)
endif()

include("${CMAKE_CURRENT_LIST_DIR}/@PACKAGE_NAME@-targets.cmake")

check_required_components(@PACKAGE_NAME@)

# qibuild compatiblity variables.
# These variables are deprecated and will be removed in the future.
string(TOUPPER PACKAGE_NAME_UPPER @PACKAGE_NAME@)

get_target_property(
  ${PACKAGE_NAME_UPPER}_INCLUDE_DIRS
  @PACKAGE_NAME@::@PACKAGE_NAME@
  INTERFACE_INCLUDE_DIRECTORIES
)

set(${PACKAGE_NAME_UPPER}_LIBRARIES)
get_target_property(${PACKAGE_NAME_UPPER}_LIBRARIES_GENERAL @PACKAGE_NAME@::@PACKAGE_NAME@ IMPORTED_LOCATION)
if(${PACKAGE_NAME_UPPER}_LIBRARIES_GENERAL)
  list(APPEND ${PACKAGE_NAME_UPPER}_LIBRARIES general ${${PACKAGE_NAME_UPPER}_LIBRARIES_GENERAL})
endif()
get_target_property(${PACKAGE_NAME_UPPER}_LIBRARIES_DEBUG @PACKAGE_NAME@::@PACKAGE_NAME@ IMPORTED_LOCATION_DEBUG)
if(${PACKAGE_NAME_UPPER}_LIBRARIES_DEBUG)
  list(APPEND ${PACKAGE_NAME_UPPER}_LIBRARIES debug ${${PACKAGE_NAME_UPPER}_LIBRARIES_DEBUG})
endif()
get_target_property(${PACKAGE_NAME_UPPER}_LIBRARIES_OPTIMIZED @PACKAGE_NAME@::@PACKAGE_NAME@ IMPORTED_LOCATION_RELEASE)
if(${PACKAGE_NAME_UPPER}_LIBRARIES_OPTIMIZED)
  list(APPEND ${PACKAGE_NAME_UPPER}_LIBRARIES optimized ${${PACKAGE_NAME_UPPER}_LIBRARIES_OPTIMIZED})
endif()

set(${PACKAGE_NAME_UPPER}_INCLUDE_DIRS ${${PACKAGE_NAME_UPPER}_INCLUDE_DIRS} CACHE INTERNAL "" FORCE)
set(${PACKAGE_NAME_UPPER}_LIBRARIES ${${PACKAGE_NAME_UPPER}_LIBRARIES} CACHE INTERNAL "" FORCE )

set(${PACKAGE_NAME_UPPER}_DEPENDS OPENSSL)

if(@WITH_SYSTEMD)
  list(APPEND ${PACKAGE_NAME_UPPER}_DEPENDS SYSTEMD)
endif()

foreach(component IN ITEMS @BOOST_COMPONENTS@)
  string(TOUPPER ${component} component_upper)
  list(APPEND ${PACKAGE_NAME_UPPER}_DEPENDS BOOST_${component_upper})
endforeach()

set(${PACKAGE_NAME_UPPER}_DEPENDS ${${PACKAGE_NAME_UPPER}_DEPENDS} CACHE INTERNAL "" FORCE)
